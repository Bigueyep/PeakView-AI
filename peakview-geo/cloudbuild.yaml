substitutions:
  _SERVICE_NAME: peakview-geo
  _REGION: europe-west1
  _REPOSITORY: peakview
  _IMAGE: peakview-geo

steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$SHORT_SHA', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$SHORT_SHA']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$SHORT_SHA'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--max-instances=5'
      - '--set-env-vars=DATABASE_URL=$(DATABASE_URL),JWT_SECRET=$(JWT_SECRET),NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$(NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY),STRIPE_SECRET_KEY=$(STRIPE_SECRET_KEY),STRIPE_PRICE_STARTER=$(STRIPE_PRICE_STARTER),STRIPE_PRICE_PRO=$(STRIPE_PRICE_PRO),STRIPE_PRICE_ENTERPRISE=$(STRIPE_PRICE_ENTERPRISE),STRIPE_WEBHOOK_SECRET=$(STRIPE_WEBHOOK_SECRET),NEXT_PUBLIC_GOOGLE_ANALYTICS_CLIENT_ID=$(NEXT_PUBLIC_GOOGLE_ANALYTICS_CLIENT_ID),CORS_ORIGINS=$(CORS_ORIGINS)'

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/$_IMAGE:$SHORT_SHA'
